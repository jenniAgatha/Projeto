<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panelMenuLateral.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        R7jPAVoAAAAAjFrd4/KH7Q9ujAc2DDUP/jJufzQunBfnz41zLsg3/O/8yvyAvQGkynnc+HxTwMlz4pIr
        c5G/8qlaDd+rBZA2PvxM/OTh+NjfxNtPGGjOAw+LJevyDJUDGzQrN8Zf/W2MnxDnfym/3f3rqwO2mqfy
        lx2+ard8awMAAACMVlOnx7Qdh5wZMX3HmDQlf0X/mDH5mX+Vq/S3Jg9rzyX02K6YMTNes2dc+OX4whXx
        +W/U8vU44yPxil3yR/SdY/KwAT5vTwOmzuhzYEPLxEn5SLq6Y8bLtm2S8ROH9G8CAADAb5uiSt/WT8WL
        RsDAOmptBQAAAOC3Rarza8kFv5ofAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        gJGorS3a26OjQ7Yz6eylcwgAAAAjUVd3HDU75s2P+zfEY7+WBuSOx+ITF8e+B5RnGAAAAFosFf9nfCSW
        /6JawUqjsmBZHHp0ebYBAACgNWYdF0vWVUtWaUauuSV23b087QAAADCs/uKiapkqTU3P+jjwsPLkAwAA
        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
        CwAAADTYhy+sVqHS2uz5xnJpAAAAoJEWLKuWoNLafPD8cmkAAACgYbq6q/WntDzX/7RcHQAAAGiYKdOq
        9ae0PCs3lqsDAAAADbPjTtX6U0ZC2trKBQIAAIDGePku1eJTRkI6OsoFAgAAgMbQAhiZ0QIAAACgwdwI
        MDLjRgAAAAAabPLUavEpIyEAAADQYGO7qsWntDw33leuDgAAADTSj5ZWS1Bpbc79dLk0AAAA0EjnXFAt
        QaW12etN5dIAAABAI+26e7UElRZmUU+5LgAAANB4n7u8WohKq3Lo0eWiAAAAQOPNeFmserpai8rw57rb
        yxUBAACAZpl9WrUclWFOz5Oxy++UywEAAABNdMGl1aJUhjMHHV4uBAAAADTdFddX61IZnpx8VrkEAAAA
        MEzO/XS1OpWmpmd9HDKrPPkAAAAwrI48Npasq1aq0ox8b3H+UkYAAABoma7ueN+5sezn1ZJVGpUFy3z/
        HwAAACNGV3e89fiYNz8eeKpawcr25bZH4uNfjH32L88wAAAAjDhtbdHeHp2dsj3p6MhnL51DAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICXjIj/Bckl+Pn+pdeRAAAAAElFTkSu
        QmCC
</value>
  </data>
  <metadata name="timerMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>